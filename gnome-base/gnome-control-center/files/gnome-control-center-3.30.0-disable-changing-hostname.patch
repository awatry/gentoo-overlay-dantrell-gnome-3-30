diff '--exclude=.git' -urN a/panels/common/cc-hostname-entry.c b/panels/common/cc-hostname-entry.c
--- a/panels/common/cc-hostname-entry.c	2018-09-03 10:20:32.000000000 -0500
+++ b/panels/common/cc-hostname-entry.c	2018-09-25 00:51:02.790619223 -0500
@@ -26,51 +26,15 @@
 
 struct _CcHostnameEntry
 {
-  GtkEntry             parent;
+  GtkLabel             parent;
 
   GDBusProxy          *hostnamed_proxy;
-  guint                set_hostname_timeout_source_id;
 };
 
-G_DEFINE_TYPE (CcHostnameEntry, cc_hostname_entry, GTK_TYPE_ENTRY)
+G_DEFINE_TYPE (CcHostnameEntry, cc_hostname_entry, GTK_TYPE_LABEL)
 
 #define SET_HOSTNAME_TIMEOUT 1
 
-static void
-cc_hostname_entry_set_hostname (CcHostnameEntry *self)
-{
-  g_autofree gchar *hostname = NULL;
-  g_autoptr(GVariant) pretty_result = NULL;
-  g_autoptr(GVariant) static_result = NULL;
-  g_autoptr(GError) pretty_error = NULL;
-  g_autoptr(GError) static_error = NULL;
-  const gchar *text;
-
-  text = gtk_entry_get_text (GTK_ENTRY (self));
-
-  g_debug ("Setting PrettyHostname to '%s'", text);
-  pretty_result = g_dbus_proxy_call_sync (self->hostnamed_proxy,
-                                          "SetPrettyHostname",
-                                          g_variant_new ("(sb)", text, FALSE),
-                                          G_DBUS_CALL_FLAGS_NONE,
-                                          -1, NULL, &pretty_error);
-  if (pretty_result == NULL)
-    g_warning ("Could not set PrettyHostname: %s", pretty_error->message);
-
-  /* Set the static hostname */
-  hostname = pretty_hostname_to_static (text, FALSE);
-  g_assert (hostname);
-
-  g_debug ("Setting StaticHostname to '%s'", hostname);
-  static_result = g_dbus_proxy_call_sync (self->hostnamed_proxy,
-                                          "SetStaticHostname",
-                                          g_variant_new ("(sb)", hostname, FALSE),
-                                          G_DBUS_CALL_FLAGS_NONE,
-                                          -1, NULL, &static_error);
-  if (static_result == NULL)
-    g_warning ("Could not set StaticHostname: %s", static_error->message);
-}
-
 static char *
 get_hostname_property (CcHostnameEntry *self,
                        const char      *property)
@@ -126,57 +90,6 @@
   return g_steal_pointer (&str);
 }
 
-static gboolean
-set_hostname_timeout (CcHostnameEntry *self)
-{
-  self->set_hostname_timeout_source_id = 0;
-
-  cc_hostname_entry_set_hostname (self);
-
-  return FALSE;
-}
-
-static void
-remove_hostname_timeout (CcHostnameEntry *self)
-{
-  if (self->set_hostname_timeout_source_id)
-    g_source_remove (self->set_hostname_timeout_source_id);
-
-  self->set_hostname_timeout_source_id = 0;
-}
-
-static void
-reset_hostname_timeout (CcHostnameEntry *self)
-{
-  remove_hostname_timeout (self);
-
-  self->set_hostname_timeout_source_id = g_timeout_add_seconds (SET_HOSTNAME_TIMEOUT,
-                                                                (GSourceFunc) set_hostname_timeout,
-                                                                self);
-}
-
-static void
-text_changed_cb (CcHostnameEntry *entry)
-{
-  reset_hostname_timeout (entry);
-}
-
-static void
-cc_hostname_entry_dispose (GObject *object)
-{
-  CcHostnameEntry *self = CC_HOSTNAME_ENTRY (object);
-
-  if (self->set_hostname_timeout_source_id)
-    {
-      remove_hostname_timeout (self);
-      set_hostname_timeout (self);
-    }
-
-  g_clear_object (&self->hostnamed_proxy);
-
-  G_OBJECT_CLASS (cc_hostname_entry_parent_class)->dispose (object);
-}
-
 static void
 cc_hostname_entry_constructed (GObject *object)
 {
@@ -229,11 +142,9 @@
   str = cc_hostname_entry_get_display_hostname (CC_HOSTNAME_ENTRY (self));
 
   if (str != NULL)
-    gtk_entry_set_text (GTK_ENTRY (self), str);
+    gtk_label_set_text (GTK_ENTRY (self), str);
   else
-    gtk_entry_set_text (GTK_ENTRY (self), "");
-
-  g_signal_connect (G_OBJECT (self), "changed", G_CALLBACK (text_changed_cb), self);
+    gtk_label_set_text (GTK_ENTRY (self), "");
 }
 
 static void
@@ -242,7 +153,6 @@
   GObjectClass *object_class = G_OBJECT_CLASS (klass);
 
   object_class->constructed = cc_hostname_entry_constructed;
-  object_class->dispose = cc_hostname_entry_dispose;
 }
 
 static void
diff '--exclude=.git' -urN a/panels/info/info-overview.ui b/panels/info/info-overview.ui
--- a/panels/info/info-overview.ui	2018-09-03 10:20:32.000000000 -0500
+++ b/panels/info/info-overview.ui	2018-09-25 00:15:58.011282299 -0500
@@ -180,7 +180,9 @@
             <child>
               <object class="CcHostnameEntry" id="name_entry">
                 <property name="visible">True</property>
+                <property name="can_focus">False</property>
                 <property name="xalign">0</property>
+                <property name="selectable">True</property>
               </object>
               <packing>
                 <property name="top-attach">0</property>
diff '--exclude=.git' -urN a/panels/sharing/cc-sharing-panel.c b/panels/sharing/cc-sharing-panel.c
--- a/panels/sharing/cc-sharing-panel.c	2018-09-03 10:20:32.000000000 -0500
+++ b/panels/sharing/cc-sharing-panel.c	2018-09-25 00:47:18.151648460 -0500
@@ -736,83 +736,6 @@
 
 G_DEFINE_AUTOPTR_CLEANUP_FUNC (GetHostNameData, g_free);
 
-static void
-cc_sharing_panel_get_host_name_fqdn_done (GObject         *object,
-                                          GAsyncResult    *res,
-                                          gpointer         user_data)
-{
-  GDBusConnection *connection = G_DBUS_CONNECTION (object);
-  g_autoptr(GetHostNameData) data = user_data;
-  g_autoptr(GError) error = NULL;
-  g_autoptr(GVariant) variant = NULL;
-  const gchar *fqdn;
-
-  variant = g_dbus_connection_call_finish (connection, res, &error);
-
-  if (variant == NULL)
-    {
-      /* Avahi service may not be available */
-      g_debug ("Error calling GetHostNameFqdn: %s", error->message);
-
-      if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
-        {
-          g_autofree gchar *hostname = NULL;
-
-          hostname = cc_hostname_entry_get_hostname (CC_HOSTNAME_ENTRY (data->panel->hostname_entry));
-
-          cc_sharing_panel_setup_label (data->panel, data->label, hostname);
-        }
-
-      return;
-    }
-
-  g_variant_get (variant, "(&s)", &fqdn);
-
-  cc_sharing_panel_setup_label (data->panel, data->label, fqdn);
-}
-
-static void
-cc_sharing_panel_bus_ready (GObject         *object,
-                            GAsyncResult    *res,
-                            gpointer         user_data)
-{
-  g_autoptr(GDBusConnection) connection = NULL;
-  g_autoptr(GetHostNameData) data = user_data;
-  g_autoptr(GError) error = NULL;
-
-  connection = g_bus_get_finish (res, &error);
-
-  if (connection == NULL)
-    {
-      g_warning ("Could not connect to system bus: %s", error->message);
-
-      if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
-        {
-          g_autofree gchar *hostname = NULL;
-
-          hostname = cc_hostname_entry_get_hostname (CC_HOSTNAME_ENTRY (data->panel->hostname_entry));
-
-          cc_sharing_panel_setup_label (data->panel, data->label, hostname);
-        }
-
-      return;
-    }
-
-  g_dbus_connection_call (connection,
-                          "org.freedesktop.Avahi",
-                          "/",
-                          "org.freedesktop.Avahi.Server",
-                          "GetHostNameFqdn",
-                          NULL,
-                          (GVariantType*)"(s)",
-                          G_DBUS_CALL_FLAGS_NONE,
-                          -1,
-                          data->panel->hostname_cancellable,
-                          cc_sharing_panel_get_host_name_fqdn_done,
-                          data);
-  g_steal_pointer (&data);
-}
-
 
 static void
 cc_sharing_panel_setup_label_with_hostname (CcSharingPanel *self,
@@ -820,7 +743,6 @@
 {
   GtkWidget *menu;
   GtkWidget *menu_item;
-  GetHostNameData *get_hostname_data;
 
   /* create the menu */
   menu = gtk_menu_new ();
@@ -840,16 +762,6 @@
   /* destroy the menu when the label is destroyed */
   g_signal_connect_swapped (label, "destroy", G_CALLBACK (gtk_widget_destroy),
                             menu);
-
-
-  /* set the hostname */
-  get_hostname_data = g_new (GetHostNameData, 1);
-  get_hostname_data->panel = self;
-  get_hostname_data->label = label;
-  g_bus_get (G_BUS_TYPE_SYSTEM,
-             self->hostname_cancellable,
-             cc_sharing_panel_bus_ready,
-             get_hostname_data);
 }
 
 static gboolean
diff '--exclude=.git' -urN a/panels/sharing/sharing.ui b/panels/sharing/sharing.ui
--- a/panels/sharing/sharing.ui	2018-09-03 10:20:32.000000000 -0500
+++ b/panels/sharing/sharing.ui	2018-09-25 00:15:58.011282299 -0500
@@ -66,9 +66,11 @@
             <child>
               <object class="CcHostnameEntry" id="hostname_entry">
                 <property name="visible">True</property>
-                <property name="can_focus">True</property>
+                <property name="can_focus">False</property>
+                <property name="xalign">0</property>
+                <property name="selectable">True</property>
                 <property name="margin_bottom">32</property>
-                <property name="invisible_char">‚óè</property>
+                <property name="margin_left">16</property>
                 <accessibility>
                   <relation type="labelled-by" target="label6"/>
                 </accessibility>
